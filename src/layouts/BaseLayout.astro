---
import { siteConfig } from '../../astro.config.mjs';
import '../styles/global.css';

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  article?: boolean;
  layout?: 'default' | 'docs' | 'simple';
}

const {
  title = siteConfig.title,
  description = siteConfig.description,
  image = '/og-image.jpg',
  article = false,
  layout = 'default'
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = new URL(image, Astro.url).href;
---

<!DOCTYPE html>
<html lang="en" data-theme="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={article ? "article" : "website"} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={socialImageURL} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />
    
    <!-- Sitemap -->
    <link rel="sitemap" href="/sitemap-index.xml" />
    
    <!-- Preload critical fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Barlow:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet" />
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    
    <!-- Theme Script (inline to prevent FOUC) -->
    <script is:inline>
      // Theme initialization
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      };
      
      const isDark = getThemePreference() === 'dark';
      document.documentElement.setAttribute('data-theme', isDark ? 'dark' : 'light');
      
      if (typeof localStorage !== 'undefined') {
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      }
    </script>
  </head>
  
  <body>
    <div class={`app-layout app-layout--${layout}`}>
      <slot />
    </div>
    
    <!-- Theme toggle script -->
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const themeToggle = document.getElementById('theme-toggle');
        if (themeToggle) {
          themeToggle.addEventListener('click', () => {
            const currentTheme = document.documentElement.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            
            document.documentElement.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            
            // Update button icon
            const icon = themeToggle.querySelector('i');
            if (icon) {
              icon.className = newTheme === 'dark' ? 'fas fa-sun' : 'fas fa-moon';
            }
          });
        }
      });
    </script>
    
    <!-- Mobile menu script -->
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('sidebar-overlay');
        
        if (mobileMenuToggle && sidebar) {
          mobileMenuToggle.addEventListener('click', () => {
            sidebar.classList.toggle('sidebar--open');
            document.body.classList.toggle('sidebar-open');
          });
        }
        
        if (overlay) {
          overlay.addEventListener('click', () => {
            sidebar?.classList.remove('sidebar--open');
            document.body.classList.remove('sidebar-open');
          });
        }
        
        // Close sidebar on escape key
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && sidebar?.classList.contains('sidebar--open')) {
            sidebar.classList.remove('sidebar--open');
            document.body.classList.remove('sidebar-open');
          }
        });
      });
    </script>
  </body>
</html>

<style>
  .app-layout {
    min-height: 100vh;
  }
  
  /* Default layout - simple single column */
  .app-layout--default,
  .app-layout--simple {
    display: flex;
    flex-direction: column;
  }
  
  /* Docs layout - Large screens: three columns (sidebar + main + toc) */
  .app-layout--docs {
    display: grid;
    grid-template-areas: 
      "header header header"
      "sidebar main toc"
      "footer footer footer";
    grid-template-columns: var(--sidebar-width) 1fr var(--toc-width);
    grid-template-rows: var(--header-height) 1fr auto;
  }
  
  /* Medium screens: two columns (sidebar + main), TOC becomes dropdown in main */
  @media (max-width: 1200px) and (min-width: 768px) {
    .app-layout--docs {
      grid-template-areas: 
        "header header"
        "sidebar main"
        "footer footer";
      grid-template-columns: var(--sidebar-width) 1fr;
    }
  }
  
  /* Small screens: single column, sidebar becomes hamburger menu */
  @media (max-width: 767px) {
    .app-layout--docs {
      grid-template-areas: 
        "header"
        "main"
        "footer";
      grid-template-columns: 1fr;
    }
  }
  
  /* Prevent body scroll when mobile sidebar is open */
  body.sidebar-open {
    overflow: hidden;
  }
</style>